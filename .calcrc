define slope(x1,y1,x2,y2) {
	local backup = config("all");
	config("mode","frac");

	local slope = (y2-y1)/(x2-x1);

	config("all", backup);

	return slope;
};

define iform(x1,y1,x2,y2) {
	local backup = config("all");
	config("mode","frac");

	local slope=(y2-y1)/(x2-x1);
	local intercept=slope*(-x1)+y1;
	print "Y = " : slope : "x + " : intercept;

	config("all",backup); };
define intercept(x1,y1,slope) {
	local backup = config("all");
	config("mode","frac");

	local intercept = slope*(-x1)+y1;
	print "Y = " : slope : "x + " : intercept;

	config("all", backup);

	return intercept;
};

define midpoint(x1,y1,x2,y2) {
	local xmid = (x1+x2)/2;
	local ymid = (y1+y2)/2;

	return list( xmid, ymid );
};

define linedistance(x1,y1,x2,y2) {
	return sqrt((x2-x1)^2+(y2-y1)^2);
};

define arclen(radius,degree) {
	return 2 * radius * (degree/360);
}

define quadratic(a,b,c) {
	local pos = (-b + sqrt(b^2-4*a*c)) / (2*a);
	local neg = (-b - sqrt(b^2-4*a*c)) / (2*a);
	return list(pos,neg);
}

define quaddisc(a,b,c) {
	return (b^2-4*a*c);
}

define permut(sum,diff) {
	return (sum!)/(sum-diff)!;
}

define combf(sum,diff) {
	return (sum!)/(diff!*(sum-diff)!);
}
